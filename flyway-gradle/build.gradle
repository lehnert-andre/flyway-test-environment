import org.flywaydb.gradle.task.FlywayMigrateTask

plugins {
	id 'org.springframework.boot' version '2.3.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id "org.flywaydb.flyway" version "6.5.3"
}

configurations {
	mapstruct
}

// default configuration to run flywayClean
// use $ sh ./gradlew flywayClean flywayMigrate flywayInfo -Pflyway.url=jdbc:postgresql://localhost:65432/flyway -Pflyway.user=flyway -Pflyway.password=flyway -Pflyway.schemas=flyway -Pflyway.defaultSchema=flyway -Pflyway.locations=filesystem:src/main/resources/db/migration/all,filesystem:src/main/resources/db/migration/LOCAL
flyway {
	url = 'jdbc:postgresql://localhost:65432/flyway'
	user = 'flyway'
	password = 'flyway'
	schemas = ['flyway']
	defaultSchema = 'flyway'
}

// custom task to run flywayMigrate directly on LOCAL
task flywayMigrateLOCAL(type: FlywayMigrateTask) {
	url = 'jdbc:postgresql://localhost:65432/flyway'
	user = 'flyway'
	password = 'flyway'
	schemas = ['flyway']
	defaultSchema = 'flyway'
	locations = ['filesystem:src/main/resources/db/migration/all', 'filesystem:src/main/resources/db/migration/LOCAL']
	outOfOrder = false
	baselineOnMigrate = true
}


group = 'de.exxcellent.school.gradle'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.mapstruct:mapstruct:1.3.1.Final'
	annotationProcessor( 'org.mapstruct:mapstruct-processor:1.3.1.Final' )
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'junit', module: 'junit'
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}
